#include <stdio.h>
#include <stdlib.h>

#define MAX 5 // Define the maximum size of the queue

int queue[MAX];
int front = -1;
int rear = -1;

// --- Queue Operations ---

// 1. Enqueue (Insert)
void enqueue(int item) {
    if (rear == MAX - 1) {
        printf("\nQueue Overflow! Cannot insert %d.\n", item);
        return;
    }
    
    if (front == -1) {
        front = 0; // Initialize front when the first element is inserted
    }
    
    queue[++rear] = item;
    printf("%d inserted into the queue.\n", item);
}

// 2. Dequeue (Delete)
void dequeue() {
    if (front == -1 || front > rear) {
        printf("\nQueue Underflow! Queue is empty.\n");
        front = rear = -1; // Reset to empty state
        return;
    }
    
    printf("Deleted element is: %d\n", queue[front]);
    front++;
    
    if (front > rear) {
        front = rear = -1; // Reset to empty state if the last element was deleted
    }
}

// 3. Display Queue
void display() {
    if (front == -1) {
        printf("\nQueue is Empty.\n");
        return;
    }
    
    printf("\nQueue elements: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");
}


int main() {
    int choice, value, c;
    
    do {
        printf("\n--- Queue Menu ---\n");
        printf("1. Enqueue (Insert)\n2. Dequeue (Delete)\n3. Display Queue\n4. Exit\n");
        printf("Enter your choice: ");
        
        if (scanf("%d", &choice) != 1) choice = 0;
        while ((c = getchar()) != '\n' && c != EOF) {}

        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &value);
                while ((c = getchar()) != '\n' && c != EOF) {}
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting program.\n");
                break;
            default:
                printf("Invalid choice.\n");
        }
    } while (choice != 4);

    // Terminal pause logic
    printf("\n\n*** Program Finished. Press ENTER to close the terminal. ***");
    while ((c = getchar()) != '\n' && c != EOF) {}
    getchar();
    return 0;
}
